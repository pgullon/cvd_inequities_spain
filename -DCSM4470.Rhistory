clase="1")
# Clase Social 2
dta_2<- subset(dta, clase==2)
sexo_sedentario_2 <- dta_2 %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~sexo+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="sexo") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
clase="2")
# Clase Social 3
dta_3<- subset(dta, clase==3)
sexo_sedentario_3 <- dta_3 %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~sexo+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="sexo") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
clase="3")
# Clase Social 4
dta_4<- subset(dta, clase==4)
sexo_sedentario_4 <- dta_4 %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~sexo+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="sexo") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
clase="4")
# Clase Social 5
dta_5<- subset(dta, clase==5)
sexo_sedentario_5 <- dta_5 %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~sexo+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="sexo") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
clase="5")
# Clase Social 6
dta_6<- subset(dta, clase==6)
sexo_sedentario_6 <- dta_6 %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~sexo+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="sexo") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
clase="6")
# Montamos la base de datos
sexo_sedentario_clase <- sexo_sedentario_all %>%
rbind(sexo_sedentario_1) %>%
rbind(sexo_sedentario_2) %>%
rbind(sexo_sedentario_3) %>%
rbind(sexo_sedentario_4) %>%
rbind(sexo_sedentario_5) %>%
rbind(sexo_sedentario_6) %>%
mutate(exp="Sex Inequality by Social Class") %>%
rename(est = rii, infci=rii_infci, supci=rii_supci, estrato=clase)
########################################################
# MONTAMOS LA BASE DE DATOS CON TODOS LOS RESULTADOS DEL ANÁLISIS
# Juntamos bases de datos
desigualdades_sedentarismo <- rii_sedentario_education %>%
rbind(rii_sedentario_clase) %>%
rbind(sii_sedentario_education) %>%
rbind(sexo_sedentario_educacion) %>%
rbind(sexo_sedentario_clase)
save(desigualdades_sedentarismo, file="Physical Activity/desigualdades_sedentarismo.RData")
rm(list=ls())
load("Physical Activity/desigualdades_sedentarismo.RData")
theme_fis<-  theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=18, face="bold", color="black"),
strip.text = element_text(size=18, face="bold", color="black"),
legend.text=element_text(size=18, color="black"),
legend.title = element_text(size=16, color="black", face="bold"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text.x = element_text(color="black", size=14),
axis.text.y = element_text(color="black", size=14),
legend.position="bottom",
legend.key.size=unit(2, "line"))
# Ordenamos niveles de variables para RII & SII
desigualdades_sedentarismo$estrato <- factor(desigualdades_sedentarismo$estrato,
levels = c("Overall", "Men", "Women", "Bajo", "Medio", "Alto", "1", "2", "3", "4", "5", "6"))
desigualdades_sedentarismo$exp <- factor(desigualdades_sedentarismo$exp, levels = c("RII Education", "RII Social Class", "SII Education", "Sex Inequality by Educational Level", "Sex Inequality by Social Class"))
#######################
## Gráficos para RII ##
#######################
# RII por educación, por sexo - 1 figura
fig_rii_junto_educacion <- desigualdades_sedentarismo %>%
filter(exp=="RII Education") %>%
ggplot(aes(x=encuesta, y=est, ymin=infci, ymax=supci)) +
geom_hline(yintercept = 1, lty=2)+
geom_ribbon(alpha=0.3, aes(fill=estrato))+
geom_line(aes(color=estrato), linewidth=1) +
labs(x="", y="RII (95% CI)")+
scale_y_continuous(trans="log",
breaks=c(0.75, 1, 1.5, 2, 3, 4, 5))+
scale_x_continuous(breaks = c(2001, 2003, 2006, 2011, 2014, 2017, 2020))+
coord_cartesian(ylim= c(0.75, 5.5))+
theme_bw()+
theme_fis+
scale_color_manual(values=c("Overall" = "dimgray",
"Men" = "#CC0033",
"Women" = "#0071bc"),
name="Sex")+
scale_fill_manual(values=c("Overall" = "dimgray",
"Men" = "#CC0033",
"Women" = "#0071bc"),
name="Sex")+
theme()
fig_rii_junto_educacion
load("joined_dta.RData")
#Lista CCAA
ccaas <- read_delim("ccaas.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
#Duplicamos edad para tabla 1
dta <- dta %>%
mutate(edad_pura = edad)
#Centramos edad
dta <- dta %>%
mutate(edad=scale(edad, center=T, scale=F))
#Eliminamos datos de 2009 porque no preguntan bien por sedentarismo
dta <- dta %>%
filter(encuesta != "2009")
########################################################################
##################### 2. ANÁLISIS DE DESIGUALDADES #####################
########################################################################
####################################
## Calculamos RII en sedentarismo ##
####################################
select <- dplyr::select
# RII por nivel educativo
# Overall
rii_sedentario_overall <- dta %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~education_3_tr+edad+sexo, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="education_3_tr") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
sexo="Overall")
# Hombres
dta_h<- subset(dta, sexo==1)
rii_sedentario_h <- dta_h %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~education_3_tr+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="education_3_tr") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
sexo="Men")
# Mujeres
dta_m<- subset(dta, sexo==0)
rii_sedentario_m <- dta_m %>%
nest(data=-encuesta) %>%
mutate(model=map(data, ~glm(formula=sedentario~education_3_tr+edad, data=.x,
family="poisson")),
tidied=map(model, tidy)) %>%
unnest(tidied) %>%
mutate(rii=exp(estimate),
rii_infci=exp(estimate-1.96*std.error),
rii_supci=exp(estimate+1.96*std.error)) %>%
filter(term=="education_3_tr") %>%
select(rii, rii_infci, rii_supci, encuesta) %>%
mutate(risk_factor="Sedentarismo",
sexo="Women")
#Creamos base de datos de RII por nivel educativo
rii_sedentario_education <-
rii_sedentario_overall %>%
rbind(rii_sedentario_h) %>%
rbind(rii_sedentario_m) %>%
mutate(exp="RII Education") %>%
rename(est = rii, infci=rii_infci, supci=rii_supci, estrato=sexo)
library(segmented)
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Overall")
# Ajustar el modelo lineal básico
mod_overall <- lm(est ~ encuesta, data = rii_overall)
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011, 2014))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011))
rm(seg_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011, 2014))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011))
summary(seg_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2011))
# Ver los resultados de la segmentación
summary(seg_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011))
# Ver los resultados de la segmentación
summary(seg_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2006, 2011, 2014))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011, 2017))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011, 2017))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011))
# Ver los resultados de la segmentación
summary(seg_overall)
plot(seg_overall, col = "blue", main = "Segmentación de regresión para hombres (RII vs Año)")
points(rii_overall$encuesta, rii_overall$est, col = "red")
View(fig_rii_junto_educacion)
fig_rii_junto_educacion
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011))
# Ver los resultados de la segmentación
summary(seg_overall)
library(segmented)
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Overall")
# Ajustar el modelo lineal básico
mod_overall <- lm(est ~ encuesta, data = rii_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta)
# Ver los resultados de la segmentación
summary(seg_overall)
plot(seg_overall, col = "blue", main = "Segmentación de regresión para hombres (RII vs Año)")
points(rii_overall$encuesta, rii_overall$est, col = "red")
# Datos originales filtrados por estrato "Overall"
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Overall")
# Crear predicciones del modelo segmentado
pred_overall <- data.frame(
encuesta = rii_overall$encuesta,
est_pred = predict(seg_overall)
)
# Extraer los puntos de corte estimados
breakpoints <- breakpoints(seg_overall)$psi[, "Est."]
# Extraer los puntos de corte estimados
breakpoints <- seg_overall$psi[, "Est."]
# Graficar los datos originales y el modelo ajustado
ggplot(rii_overall, aes(x = encuesta, y = est)) +
# Puntos de datos observados
geom_point(color = "blue", size = 2) +
# Línea ajustada por el modelo segmentado
geom_line(data = pred_overall, aes(x = encuesta, y = est_pred), color = "red", size = 1) +
# Añadir los puntos de corte
geom_vline(xintercept = breakpoints, linetype = "dashed", color = "black", size = 1) +
# Títulos y etiquetas
labs(title = "Modelo de segmentación de RII para sedentarismo",
x = "Año de encuesta",
y = "Índice Relativo de Desigualdad (RII)") +
# Estilo del gráfico
theme_minimal()
fig_segmented <- ggplot(rii_overall, aes(x = encuesta, y = est)) +
geom_point(color = "blue", size = 2) +
geom_line(data = pred_overall, aes(x = encuesta, y = est_pred), color = "red", size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed", color = "black", size = 1) +
labs(title = "Modelo de segmentación de RII para sedentarismo",
x = "Año de encuesta",
y = "Índice Relativo de Desigualdad (RII)") +
theme_minimal()
View(fig_rii_junto_educacion)
fig_rii_junto_educacion
library(segmented)
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Overall")
# Ajustar el modelo lineal básico
mod_overall <- lm(est ~ encuesta, data = rii_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2006, 2011, 2014))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011, 2014))
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2003, 2011))
# Ver los resultados de la segmentación
summary(seg_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2011))
# Ver los resultados de la segmentación
summary(seg_overall)
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Men")
# Ajustar el modelo lineal básico
mod_overall <- lm(est ~ encuesta, data = rii_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2011))
# Ver los resultados de la segmentación
summary(seg_overall)
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Women")
# Ajustar el modelo lineal básico
mod_overall <- lm(est ~ encuesta, data = rii_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2011))
# Ver los resultados de la segmentación
summary(seg_overall)
rii_overall <- rii_sedentario_education %>%
filter(estrato=="Overall")
# Ajustar el modelo lineal básico
mod_overall <- lm(est ~ encuesta, data = rii_overall)
# Aplicar segmentación de regresión
seg_overall <- segmented(mod_overall, seg.Z = ~encuesta, psi = c(2011))
# Ver los resultados de la segmentación
summary(seg_overall)
# Autor: Luis Cereijo
# Proyecto: FIS Cardiodesigualdades
# Script análisis sobre Actividad Física y Sedentarismo
## INDICE
# 1. Cargamos bases y homogeneizamos.
# 2. Hacemos análisis de desigualdad.
# 3. Visualización gráfica de datos.
# 4. Análisis de desigualdades por Comunidades Autónomas.
# 5. Análisis prevalencias ponderadas en sedentarismo.
# 6. Análisis ICC prevalencias por Comunidad Autónoma
# Cargamos librerías
library(plyr)
library(tidyverse)
library(broom)
library(glmmTMB)
library(mixedup)
library(sf)
library(srvyr)
library(lpSolve)
library(irr)
library(scales)
library(segmented)
select=dplyr::select
rm(list=ls())
#dta <- dta %>%
#  mutate(educ_cont=as.numeric(education_3)) %>% #clase en continua para algunas de las medidas
#  mutate(educ_inv=(educ_cont-3)*(-1)) %>% #clase invertida (clase 6 pasa a ser clase 1)
#  mutate(educ_tr=rescale(educ_inv)) #En esta la clase en lugar de 1 a 6 va de 0 a 1
########################################################################
################### 1. CARGAMOS DATOS Y HOMOGENEIZAMOS #################
########################################################################
#Cargamos base de datos y homogeneizamos con el resto del proyecto
load("joined_dta.RData")
#Lista CCAA
ccaas <- read_delim("ccaas.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
#Duplicamos edad para tabla 1
dta <- dta %>%
mutate(edad_pura = edad)
#Centramos edad
dta <- dta %>%
mutate(edad=scale(edad, center=T, scale=F))
#Eliminamos datos de 2009 porque no preguntan bien por sedentarismo
dta <- dta %>%
filter(encuesta != "2009")
summarise(dta$edad)
summary(dta$edad)
# Autor: Luis Cereijo
# Proyecto: FIS Cardiodesigualdades
# Script análisis sobre Actividad Física y Sedentarismo
## INDICE
# 1. Cargamos bases y homogeneizamos.
# 2. Hacemos análisis de desigualdad.
# 3. Visualización gráfica de datos.
# 4. Análisis de desigualdades por Comunidades Autónomas.
# 5. Análisis prevalencias ponderadas en sedentarismo.
# 6. Análisis ICC prevalencias por Comunidad Autónoma
# Cargamos librerías
library(plyr)
library(tidyverse)
library(broom)
library(glmmTMB)
library(mixedup)
library(sf)
library(srvyr)
library(lpSolve)
library(irr)
library(scales)
library(segmented)
select=dplyr::select
rm(list=ls())
load("joined_dta.RData")
#Lista CCAA
ccaas <- read_delim("ccaas.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
#Duplicamos edad para tabla 1
dta <- dta %>%
mutate(edad_pura = edad)
summary(dta$edad_pura)
summary(dta$edad)
#Centramos edad
dta <- dta %>%
mutate(edad=scale(edad, center=T, scale=F))
#Eliminamos datos de 2009 porque no preguntan bien por sedentarismo
dta <- dta %>%
filter(encuesta != "2009")
View(dta)
dta$ccaa
View(ccaas)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>20 & edad_pura<65) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
View(prevalencias_spain_overall)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>65 & edad_pura<85) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
View(prevalencias_spain_overall)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>65 & edad_pura<85 & sexo==1) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
View(prevalencias_spain_overall)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>65 & edad_pura<85 & sexo==2) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>65 & edad_pura<85 & sexo==2) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
table(dta$sexo)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>65 & edad_pura<85 & sexo==0) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
View(prevalencias_spain_overall)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>65 & edad_pura<85 & sexo==1) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
View(prevalencias_spain_overall)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>20 & edad_pura<65 & sexo==1) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
prevalencias_spain_overall <- dta %>%
as_survey_design(weights = c(factor2)) %>%
filter(ccaa==13 & edad_pura>20 & edad_pura<65 & sexo==0) %>%
group_by(encuesta) %>%
summarize(sedentario = survey_mean(sedentario, na.rm = T, vartype = "ci"),
)
load("C:/Users/luis_/OneDrive - Universidad de Alcala/Investigacion/FIS_CVDinequities/R/cvd_inequities_spain/2017/misterio.RData")
View(misterio)
load("C:/Users/luis.cereijo/OneDrive - Universidad de Alcala/Investigacion/FIS_CVDinequities/R/cvd_inequities_spain/2023/ESdEadulto_2023.RData")
View(Microdatos)
View(Metadatos)
View(Microdatos)
View(Metadatos)
str(Metadatos)
str(Microdatos)
system("git config --global user.name 'luiscereijo'")
system("git config --global user.email 'luiscereijo@gmail.com'")
system("git config --global user.name 'luiscereijo'")
system("git config --global user.email 'luiscereijo@gmail.com'")
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
git status
git status
gitcreds_delete()
gitcreds_set()
gitcreds_delete()
install.packages("usethis")
library(usethis)
use_git_config(user.name="luiscereijo", user.mail="luiscereijo@gmail.com")
